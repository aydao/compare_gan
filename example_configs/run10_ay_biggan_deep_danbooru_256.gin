# Parameters for AdamOptimizer:
# ==============================================================================
tf.train.AdamOptimizer.beta1 = 0.0
tf.train.AdamOptimizer.beta2 = 0.999
tf.train.AdamOptimizer.epsilon = 1e-08
tf.train.AdamOptimizer.use_locking = False

# Parameters for batch_norm:
# ==============================================================================
# None.

# Parameters for BigGanResNetBlock:
# ==============================================================================
BigGanResNetBlock.add_shortcut = True

# Parameters for conditional_batch_norm:
# ==============================================================================
conditional_batch_norm.use_bias = False

# Parameters for cross_replica_moments:
# ==============================================================================
cross_replica_moments.group_size = None
cross_replica_moments.parallel = True

# Parameters for D:
# ==============================================================================
D.batch_norm_fn = None
D.layer_norm = False
D.spectral_norm = True

# Parameters for dataset:
# ==============================================================================
dataset.name = "danbooru_256"
dataset.seed = 888

# Parameters for resnet_biggan_deep.Discriminator:
# ==============================================================================
resnet_biggan_deep.Discriminator.blocks_with_attention = '64'
resnet_biggan_deep.Discriminator.ch = 128
resnet_biggan_deep.Discriminator.project_y = True

# Parameters for G:
# ==============================================================================
G.batch_norm_fn = @conditional_batch_norm
G.spectral_norm = True

# Parameters for resnet_biggan_deep.Generator:
# ==============================================================================
resnet_biggan_deep.Generator.blocks_with_attention = '64'
resnet_biggan_deep.Generator.ch = 128
resnet_biggan_deep.Generator.embed_y = True
resnet_biggan_deep.Generator.embed_y_dim = 128
resnet_biggan_deep.Generator.experimental_fast_conv_to_rgb = False

#### resnet_biggan.Generator.embed_bias = False
#### resnet_biggan.Generator.embed_z = False
#### resnet_biggan.Generator.hierarchical_z = True

# Parameters for hinge:
# ==============================================================================
# None.

# Parameters for loss:
# ==============================================================================
loss.fn = @hinge

# Parameters for ModularGAN:
# ==============================================================================
ModularGAN.conditional = True
ModularGAN.d_lr = 0.000025
ModularGAN.d_optimizer_fn = @tf.train.AdamOptimizer
ModularGAN.deprecated_split_disc_calls = False
ModularGAN.ema_decay = 0.9999
ModularGAN.ema_start_step = 250000
ModularGAN.experimental_force_graph_unroll = False
ModularGAN.experimental_joint_gen_for_disc = False
ModularGAN.fit_label_distribution = False
ModularGAN.g_lr = 0.00025
ModularGAN.g_optimizer_fn = @tf.train.AdamOptimizer
ModularGAN.g_use_ema = True

# Parameters for no_penalty:
# ==============================================================================
# None.

# Parameters for normal:
# ==============================================================================
normal.mean = 0.0
normal.seed = None

# Parameters for options:
# ==============================================================================
options.architecture = "resnet_biggan_deep_arch"
options.batch_size = 4096
options.disc_iters = 2
options.discriminator_normalization = None
options.lamba = 1
options.training_steps = 250000
options.gan_class = @ModularGAN
options.z_dim = 128

# Parameters for penalty:
# ==============================================================================
penalty.fn = @no_penalty

# Parameters for run_config:
# ==============================================================================
run_config.iterations_per_loop = 250
run_config.keep_checkpoint_max = 1000
run_config.save_checkpoints_steps = 500
run_config.single_core = False
run_config.tf_random_seed = None

# Parameters for spectral_norm:
# ==============================================================================
spectral_norm.singular_value = "auto"
spectral_norm.epsilon = 1e-12

# Parameters for standardize_batch:
# ==============================================================================
standardize_batch.decay = 0.9
standardize_batch.epsilon = 1e-4
standardize_batch.use_moving_averages = False
standardize_batch.use_cross_replica_mean = None # NOTE: None is _True_ for TPUs 

# Parameters for weights:
# ==============================================================================
weights.initializer = "orthogonal"

# Parameters for z:
# ==============================================================================
z.distribution_fn = @tf.random.normal
z.maxval = 1.0
z.minval = -1.0
z.stddev = 1.0
